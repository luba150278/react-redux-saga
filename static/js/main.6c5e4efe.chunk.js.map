{"version":3,"sources":["redux/types.js","redux/actions.js","components/Alert.js","components/PostForm.js","components/Post.js","components/Posts.js","components/Loader.js","components/FetchedPosts.js","App.js","reportWebVitals.js","redux/appReducer.js","redux/postsReducer.js","redux/rootReducer.js","redux/middleware.js","redux/sagas.js","index.js"],"names":["CREATE_POST","FETCH_POSTS","REQUEST_POSTS","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","hideLoader","type","showAlert","text","dispatch","payload","setTimeout","Alert","className","role","PostForm","props","submitHandler","event","preventDefault","title","state","trim","newPost","id","Date","now","toString","console","log","createPost","setState","changeInputHandler","persist","prev","target","name","value","onSubmit","this","alert","htmlFor","onChange","Component","mapDispatchToProps","post","connect","app","syncPosts","posts","length","map","Post","Loader","useDispatch","useSelector","fetchedPosts","loading","onClick","App","FetchedPosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","concat","forbidden","sagaWatcher","sagaWorker","takeEvery","put","call","fetchPosts","a","fetch","response","json","saga","createSagaMiddleWare","store","createStore","compose","applyMiddleware","thunk","next","filter","w","includes","window","__REDUX_DEVTOOLS_EXTENSION__","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c5e4efe.chunk.js","sourcesContent":["export const CREATE_POST = \"POST/CREATE_POST\";\r\nexport const FETCH_POSTS = \"POST/FETCH_POSTS\";\r\nexport const REQUEST_POSTS = \"POST/REQUEST_POSTS\";\r\nexport const SHOW_LOADER = \"APP/SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"APP/HIDE_LOADER\";\r\nexport const SHOW_ALERT = \"APP/SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"APP/HIDE_ALERT\";\r\n","import {\r\n  CREATE_POST,\r\n  HIDE_ALERT,\r\n  HIDE_LOADER,\r\n  SHOW_ALERT,\r\n  SHOW_LOADER,\r\n  REQUEST_POSTS\r\n} from \"./types\";\r\n\r\nexport function createPost(post) {\r\n  return { type: CREATE_POST, payload: post };\r\n}\r\nexport function showLoader() {\r\n  return {\r\n    type: SHOW_LOADER,\r\n  };\r\n}\r\n\r\nexport function hideLoader() {\r\n  return {\r\n    type: HIDE_LOADER,\r\n  };\r\n}\r\n\r\nexport function showAlert(text) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: text,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch(hideAlert());\r\n    }, 3000);\r\n  };\r\n}\r\n\r\nexport function hideAlert() {\r\n  return {\r\n    type: HIDE_ALERT,\r\n  };\r\n}\r\nexport function fetchPosts() {\r\n  return {\r\n    type: REQUEST_POSTS\r\n  }\r\n  /*   return async (dispatch) => {\r\n      try {\r\n        dispatch(showLoader());\r\n        const response = await fetch(\r\n          \"https://jsonplaceholder.typicode.com/posts?_limit=10\"\r\n        );\r\n        const json = await response.json();\r\n        dispatch({ type: FETCH_POSTS, payload: json });\r\n        dispatch(hideLoader());\r\n      } catch (e) {\r\n        dispatch(showAlert(\"Something wrong\"));\r\n        dispatch(hideLoader());\r\n      }\r\n    }; */\r\n}\r\n","export const Alert = ({ text }) => {\r\n  return (\r\n    <div className=\"alert alert-danger\" role=\"alert\">\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost, showAlert } from \"../redux/actions\";\r\nimport { Alert } from \"./Alert\";\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n    };\r\n  }\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const { title } = this.state;\r\n    if (!title.trim()) {\r\n      return this.props.showAlert(\"Title post can't be empty!\");\r\n    }\r\n    const newPost = {\r\n      title,\r\n      id: Date.now().toString(),\r\n    };\r\n\r\n    console.log(newPost);\r\n    this.props.createPost(newPost);\r\n    this.setState({ title: \"\" });\r\n  };\r\n\r\n  changeInputHandler = (event) => {\r\n    event.persist();\r\n    this.setState((prev) => ({\r\n      ...prev,\r\n      ...{ [event.target.name]: event.target.value },\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler}>\r\n        {this.props.alert && <Alert text={this.props.alert} />}\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"title\" className=\"form-label\">\r\n            Заголовок поста\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            value={this.state.title}\r\n            name=\"title\"\r\n            onChange={this.changeInputHandler}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-success\" type=\"submit\">\r\n          Создать пост\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createPost,\r\n  showAlert,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  alert: state.app.alert\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\n\r\nexport default ({ post }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{post.title}</h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Post from \"./Post\";\r\n\r\nconst Posts = ({ syncPosts }) => {\r\n  if (!syncPosts.length) {\r\n    return <p className=\"text-center\">Постов пока нет</p>;\r\n  }\r\n  return syncPosts.map((post) => <Post post={post} key={post.id} />);\r\n};\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    syncPosts: state.posts.posts,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Posts);\r\n","import React from \"react\";\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"spinner-border text-info\" role=\"status\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts } from \"../redux/actions\";\r\nimport { Loader } from \"./Loader\";\r\nimport Post from \"./Post\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.posts.fetchedPosts);\r\n  const loading = useSelector((state) => state.app.loading);\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n  if (!posts.length) {\r\n    return (\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={() => dispatch(fetchPosts())}\r\n      >\r\n        Загрузить\r\n      </button>\r\n    );\r\n  }\r\n  return posts.map((post) => <Post post={post} key={post.id} />);\r\n};\r\n","import PostForm from \"./components/PostForm\";\nimport Posts from \"./components/Posts\";\nimport FetchedPosts from \"./components/FetchedPosts\";\nfunction App() {\n  return (\n    <div className=\"container pt-3 \">\n      <div className=\"row\">\n        <div className=\"col\">\n          <PostForm />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Синхронные посты</h2>\n          <Posts posts={[1, 2, 3]} />\n        </div>\n        <div className=\"col\">\n          <h2>Асинхронные посты</h2>\n          <FetchedPosts />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { HIDE_LOADER, SHOW_LOADER, SHOW_ALERT, HIDE_ALERT } from \"./types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  alert: null\r\n}\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true }\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false }\r\n    case SHOW_ALERT:\r\n      return { ...state, alert: action.payload }\r\n    case HIDE_ALERT:\r\n      return { ...state, alert: null }\r\n    default: return state;\r\n  }\r\n}","import { CREATE_POST, FETCH_POSTS } from \"./types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  fetchedPosts: [],\r\n};\r\nexport const postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_POST:\r\n      return { ...state, posts: state.posts.concat([action.payload]) };\r\n    /* return { ...state, posts: [...state.posts, action.payload] } */\r\n    case FETCH_POSTS:\r\n      return { ...state, fetchedPosts: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"./appReducer\";\r\nimport { postsReducer } from \"./postsReducer\";\r\n\r\nexport const rootReducer = combineReducers({ posts: postsReducer, app: appReducer });\r\n","import { showAlert } from \"./actions\";\r\nimport { CREATE_POST } from \"./types\"\r\nconst forbidden = [\"fuck\", \"ass\"];\r\nexport function forbiddenWordsMiddleWare({ dispatch }) {\r\n  return function (next) {\r\n    return function (action) {\r\n      if (action.type === CREATE_POST) {\r\n        const found = forbidden.filter(w => action.payload.title.includes(w));\r\n        if (found.length) {\r\n          return dispatch(showAlert(\"You're spamer!\"));\r\n        }\r\n      }\r\n      return next(action);\r\n    }\r\n  }\r\n}","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { hideLoader, showLoader, showAlert } from \"./actions\";\r\nimport { FETCH_POSTS, REQUEST_POSTS } from \"./types\";\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(REQUEST_POSTS, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  try {\r\n    yield put(showLoader());\r\n    const payload = yield call(fetchPosts);\r\n    yield put({ type: FETCH_POSTS, payload });\r\n    yield put(hideLoader());\r\n\r\n  } catch (error) {\r\n    yield put(showAlert(\"Something wrong\"));\r\n    yield put(hideLoader());\r\n  }\r\n\r\n}\r\n\r\nasync function fetchPosts() {\r\n  const response = await fetch(\r\n    \"https://jsonplaceholder.typicode.com/posts?_limit=10\"\r\n  );\r\n  return await response.json();\r\n}\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleWare from \"redux-saga\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { forbiddenWordsMiddleWare } from \"./redux/middleware\";\nimport { sagaWatcher } from \"./redux/sagas\";\n\nconst saga = createSagaMiddleWare();\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk, forbiddenWordsMiddleWare, saga),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nsaga.run(sagaWatcher);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nrender(app, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}